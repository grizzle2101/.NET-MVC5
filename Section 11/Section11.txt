Authentication & Authorization
---Tutorial 1 - Introduction---
Most if all not ALL apps need some kind of Authentication & Authorization.
In this section we're going to go over some of the core components like.

In This Section:
-JSON WebTokens
-Stateless Authentication
-Protect Routes
-Redirect Users to a Login or Acces Denied Page
-Show/Hide Elements
-Get the Current User
-Consume Protected API Endpoints


---Tutorial 2 - Application Overview---
Great start the Application proivded won't build.
-Login Page Email & Password
-There is no backend API for this, just a dummy service that returns true if my email & password are used.
-Once we login we then get a HomePage with your name, AdminPage Link Login & Logout.
-If we log out, the Admin & Logout links disappear.
-Cannot simply type the route to get past the authentication, we get redirect to login page.

So this just demonstrates some of the core functionality we are going to cover the in the upcoming tutorials.


---Tutorial 3 - Architecture---
-On the Client we build a Login Page & on the Server an API endpoint to recieve the credentials.
-api/authenticate
--Server Returns JSON Web Token (JWT)
-The Client then persists the Token incase the tab is closed.
-The Client Browsers users folders per website to hold this token.
-The Client Browser provides an API to retrieve key value pairs from this token.

JWT on the Client:
-Display current user's name.
-Show/Hide parts of a page.
-Prevent Access to Certain Routes

API Orders:
Say we have a secured route api/orders that is only accessible to admins.
To do this we send a request and include the JWT Token as the request header.
Else return a 401 unauthorized.