----Section 15 - Angular Material----
---Tutorial 1 - Introduction---
In this section we're going to take a look at Angular Material, which is a collection of components
that give our application a modern look and feel.

In this section we're going go go over:
-Working with Various Components
    -Form Contol
    -Icons
    -Diaglog Boxes
    -Progress Spinners
    -ToolTips
-Use Prebuilt themes
-Crete a Custom theme
-Use Angular Typography
-Create Custom Typography


---Section 2 - What is Angular Material---
Angular Material is a library of high-quality UI components bulit with angular & typescript.

They have the benefits of being:
-Localized
-Clean & Simple api
-Well-tested
-Customizable
-Fast(minimal overhead)
-Well Documented

The Website:
https://material.angular.io/
Here we can see the Components in actions, really nice well designed forms with animations out of
the box, we can access all of this by using Angular Material.

BootStrap V Angular Material:
But Mosh, why do we need Material if we already have BootStrap? BootStrap is plain vanilla javascript,
so it has nothing to do with Anglar, and we cannot easily use them in our angular components.
We have to create custom directives or components to actually use the bootstrap features.

However material was written from the groud up for Angular & typescript, we can simply import
the module and begin using Angular Material. It also complies with the google design language across
Google plus & android where as bootstrap is off on its own.

Pros & Cons:
Angular Material:
-Still New(immature)
-Quality Standard
-Common api
-Easy to use

BootStrap:
-Very Mature - Has all the features we need.
-Forced to use 3rd party components.
-A lot of dependencies - Because of the 3rd parties, we have forced dependencies.

Take Home:
Angular Material is the new design library for google products, very new but reduces dependencies
on 3rd parties.


---Turorial 3 - Installing Angular Material---
So lets get this installed then, a little bit of setup required just like boostrap.

Task 1 - Create Project:
ng new material-demo

Task 2 - NPM Install Material:
cd into the material-demo directory and install.
npm install --save @angular/material @angular/cdk @angular/animations


Task 3 - Install Hammer:
Hammer is a JS library for gesture, controls its optional but may as well include it to make
your site more accessible.
npm install --save hammerjs


Task 4 - Select Theme:
In the prebuilt-themes we can take a look at the various out of the box themes, lets use indigo-ping.
Node Modules > @angular > material > prebuilt-themes


Task 5 - Apply theme:
The same we added the bootstrap styles, into our global style.css, we need use the prebuild-theme here.
@import "~@angular/material/prebuilt-themes/indigo-pink.css"

Task 6 - Import Browser Animtions Module:
In the App.module.ts we need to add animation support.
import {BrowserAnimationsModule } from '@angular/platform-browser/animations'

Also make sure to add it into the imports section.
BrowserAnimationsModule


Task 7 - Using Angular Material:
So just to make sure its all working correctly, lets try create a checkbox.
<md-checkbox>Subsribe to NewsLetter: </md-checkbox>


Error:
md-checknox is not a an Angular component, a common error because we are using a checkbox component,
that we have not yet added to the app.module.


How do we know where to find these Components?
Every Angular Material Component we wish to use, has its own instructions on where to find it.
https://material.angular.io/components/checkbox/api

The Answer is...
import {MatCheckboxModule} from '@angular/material/checkbox';


To Note:
So from the tutorial the library has changed a little, no longer is it md-checkbox but mat-checkbox.
All of the imports & usage must use the same name.

Take Home:
To use Angular Material in your application.
-NPM Install
-Add to Global style
-Import BrowserAnimationsModule
-Use Angular Material Component with the selector mat-checkbox
-Observe the slick new checkboxes.